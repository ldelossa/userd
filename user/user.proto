syntax = "proto3";
package user;

// The User service definition
// All methods in this interface implicitly return an error. 
// grpc.Errorf method along with error codes will be returned
// to calling client. The error will be formated with the underlying
// response from our datastore. 
service UserGRPC {
  // Add a user to our service
  rpc AddUser(User) returns (User) {}
  // Get a user by ID (email, username, unique ID)
  rpc GetUserByID(ID) returns (User) {}
  // Delete a user by ID (email, username, unique ID)
  rpc DeleteUserByID(ID) returns (Empty) {}
}

message User {
    string id = 1; // Unique ID of user
    string username = 2; 
    string password = 3;
    string email = 4;
    string fname = 5;
    string mname = 6;
    string lname = 7;
    message Location {
      string state = 1;
      string city = 2;
      int32 zipcode = 3;
      string phonenumber = 4;
      float lat = 5;
      float long = 6;
    }
    Location location = 8;
}

message ID {
  string id = 1;
}

message Empty{}
